---
languageName: "日本語"
languageContribute: "Rancher の翻訳にご協力ください"
generic:
  actions: アクション
  activate: アクティベート
  add: 追加
  all: 全て
  as: として
  cancel: キャンセル
  closeModal: 閉じる
  cluster: クラスター
  collapseAll: すべて折りたたむ
  command: コマンド
  confirm: 確認
  containers: コンテナ
  created: 作成日
  createdDate: "{date} 作成"
  default: デフォルト
  description: 詳細情報
  details: 詳細
  disable: 無効
  disabled: 無効
  displayName: 表示名
  dockerId: Docker ID
  domainName: ドメイン名
  done: 完了
  edit: 編集
  enable: 有効
  enabled: 有効
  entrypoint: エントリーポイント
  environment: 環境
  expandAll: すべて開く
  gigabyte: 'GB'
  hardware: ハードウェア
  healthy: ヘルス
  help: ヘルプ
  id: ID
  image: イメージ
  internal: 内部
  ipAddress: IP アドレス
  key: キー
  limit: 制限
  limits: 制限
  loading: "読込中..."
  mibibyte: 'MiB'
  missing: "*%MISSING%*"
  moreActions: その他の操作
  na: 'n/a'
  name: 名前
  namespace: 名前空間
  namespaces: 名前空間
  no: "いいえ"
  noRating: 評価なし
  none: None
  paste: ペースト
  ports: ポート
  remove: 削除
  role: ロール
  save: 保存
  saved: 保存済み
  saving: 保存中
  search: 検索
  searchOrCustomInput: カスタム値を検索または入力してください。
  seconds: 秒
  select: 選択
  service: サービス
  services: サービス
  state: 状態
  tags: タグ
  test: テスト
  testing: テスト中
  to: に
  total: 合計
  type: タイプ
  unknown: 不明
  user: ユーザー
  upload: アップロード
  uuid: UUID
  value: 値
  yes: "はい"
realmNames:
  all: 全て
  usWest: US 西部
  usEast: US 東部
  asia: アジア
  euWest: EU 西部
  euEast: EU 東部
accountsPage:
  detail:
    header: ユーザーの詳細
    table:
      headers:
        permission: 権限
        role: ロール
        clusterName: クラスター
        projectName: プロジェクト
        active: アクティブ
        created: 付与日
      global:
        title: グローバル権限
        description: インストール全体に影響を与えるものを管理するためのアクセス権
        admin: このユーザーは管理者であり、すべての権限を持っています。
      cluster:
        title: クラスターロール
        description: 個々のクラスタに対してこのユーザーに付与されるロール
        noRoles: このユーザーにはクラスタロールはありません
      project:
        title: プロジェクトロール
        description: 個々のプロジェクトに対してこのユーザーに付与されるロール
        noRoles: このユーザーにはプロジェクトロールはありません
      roles:
        title: ロール
  index:
    header: ユーザー
    localLink: ユーザーを追加
    table:
      id: ID
      kind: 種類
      identity: ID
      noData: まだユーザーはありません
      noName: None
  new:
    header: ユーザーを追加
    errors:
      usernameReq: ユーザー名が必要です
      usernameInExists: ログインユーザー名は既に利用されています。他のユーザー名を選択してください。
      pwReq: パスワードが必要です
    form:
      username:
        labelText: ユーザー名
        placeholder: "例: jsmith"
      password:
        labelText: パスワード
      name:
        labelText: 表示名
        placeholder: "例: ジョン ・ スミス"
      type:
        labelText: アカウントタイプ
      description:
        labelText: 詳細情報
        placeholder: "例: このアカウントは、ジョン ・ スミス用"
  modal:
    password: パスワードを変更
podSecurityPoliciesPage:
  index:
    header: ポッドセキュリティポリシー
    description: このロールを持つユーザーが作成したポッドにポリシーを適用する
    table:
      name: 名前
      created: 作成日
      noMatch: 検索条件に一致するポッドセキュリティポリシーがありません
  addPodSecurityPolicy: ポリシーを追加
  editPodSecurityPolicy: ポリシーを編集
  detail:
    header: ポリシー
  saveEdit: 編集
  saveNew: 作成
  new:
    errors:
      nameReq: 名前が必要です
      nameInExists: 名前は既に存在します。新しいポッドセキュリティポリシー名を使用してください。
    form:
      name:
        labelText: 名前
        placeholder: "例: policy"
rolesPage:
  title: ロール
  index:
    localLink: ロールを追加
    table:
      name: 名前
      created: 作成時刻
      builtin: ビルトイン
      noData: まだロールはありません
      noMatch: 検索条件に一致するロールがありません
      subjectKind: 種類
      template: テンプレート
  addRole: ロールを追加
  editRole: ロールの編集
  saveEdit: 編集
  saveNew: 作成
  new:
    errors:
      nameReq: 名前が必要です
      nameInExists: 名前は既に存在します。新しいロール名を使用してください。
      ruleResourceReq: ルールにはリソースが必要です。
    form:
      name:
        labelText: 名前
        placeholder: "例: Developers"
      allow:
        create: 作成
        delete: 削除
        update: 更新
        watch: 監視
        labelText: 許可
        resource: リソース
        addAction: リソースを追加
      otherRole:
        labelText: 他の役割を含める
        role: ロール
        addAction: ロールを追加
      policy:
        policy: ポリシー
        addAction: ポリシーを追加
apiPage:
  currentEndpoint: 'エンドポイント:'
  table:
    state: 状態
    description: 詳細情報
    created: 作成日
authPage:
  shibboleth:
    enabled:
      header: "{providerName} は有効です"
      required: |
        {appName} は {orgs, plural,
        =0 {0 組織}
        =1 {# 組織}
        other {# 組織}
        } と {users, plural,
        =0 {0 ユーザー}
        =1 {# ユーザー}
        other {# ユーザー}
        }に対してアクセス許可が設定されています。
      restricted: |
        {appName} は {orgs, plural,
        =0 {0 組織}
        =1 {# 組織}
        other {# 組織}
        } と {users, plural,
        =0 {0 ユーザー}
        =1 {# ユーザー}
        other {# ユーザー}
        }の環境メンバーに対してアクセス許可が設定されています。
      unrestricted: "{appName} は全ての {providerName} ユーザーに対しアクセス許可が設定されています。"
      authenticated:
        header:
          text: 認証
      disableAccess:
        header: "Danger Zone&trade;"
        warning: '<b class="text-danger">注意:</b> アクセスコントロールを無効化すると、このページや API にアクセスできる全ての人が {appName} 経由でフルコントロールするこ>とができます。'
        confirmDisable: "本当によろしいですか? アクセスコントロールを無効化する場合は再度クリックしてください"
        disable: アクセスコントロールを無効化
      groupsField: 'グループ:'
      displayName: '表示名:'
      userName: 'ユーザー名:'
      userId: 'ユーザー ID:'
    disabled:
      header: '1. シボレスアカウントを設定する'
      label: "{providerName} が設定されていません"
      warning: "{appName} はいくつかの {providerName} ユーザーやグループに対してアクセスを制限するよう設定できます。 現在はこの設定がされていないため、このページ(または API)にアクセスできる誰でもシステムを介しフルコントロールできます。"
      name:
        labelText: 表示名フィールド
      username:
        labelText: ユーザー名フィールド
      uid:
        labelText: UID フィールド
      groups:
        labelText: グループ フィールド
      testAuth:
        header: '2. テストのうえ認証を有効化する'
        subtext: '認証テストを行うことであなたのアプリケーションが正常に設定されたことを確認します:'
        buttonText:
          pre: IDPによる認証
          post: IDP からの返答を待っています
    providerName:
      shibboleth: シボレス
  root:
    header: Access Control
  github:
    standard: GitHub
    enterprise: GitHub エンタープライズ
    header:
      enabled:
        label: "{github} は有効です"
        required: |
          {appName} は {orgs, plural,
          =0 {0 組織}
          =1 {# 組織}
          other {# 組織}
          } と {users, plural,
          =0 {0 ユーザー}
          =1 {# ユーザー}
          other {# ユーザー}
          }に対してアクセス許可が設定されています。
      disabled:
        label: GitHub が設定されていません
    authenticated:
      header:
        text: 認証
        enterpriseHostName: "エンタープライズホスト:"
        clientId:
          text: "クライアント ID:"
          helpText: "設定済み GitHub アプリケーションを変更するには以下のアクセスコントロールを無効化し、再度設定し直して下さい。"
      disableAccess:
        header: "Danger Zone&trade;"
        warning: '<b class="text-danger">注意:</b> アクセスコントロールを無効化すると、このページや API にアクセスできる全ての人が {appName} 経由でフルコントロールすることができます。'
        confirmDisable: "本当によろしいですか? アクセスコントロールを無効化する場合は再度クリックしてください"
    notAuthenticated:
      header: "1. GithHub アプリケーションをセットアップする"
      ul:
        li1:
          text: '通常の GitHub の場合、新規ウィンドウでアプリケーション設定を行うために <a href="https://github.com/settings/developers" target="_blank">こちらをクリック</a> してください。'
          ul:
            li1: "GitHub エンタープライズの場合、あなたのアカウントでログインし Settings、Applications の順にクリックしてください。"
        li2:
          text: '"新規アプリケーションの登録" をクリックし、必要事項を入力してください:'
          ul:
            li1: '<b>アプリケーション名:</b> <span class="text-muted">自由記載, e.g. My {appName}</span>'
            li2: ホームページ URL
            li3: '<b>アプリケーションの詳細情報:</b> <span class="text-muted">自由記載(オプション)</span>'
            li4: 認証コールバック URL
        li3:
          text: '"アプリケーションを登録" をクリック'
      form:
        header: '2. 認証にあなたのアプリケーションを利用するよう {appName} を設定'
        subtext: '新しく作成したアプリケーションの右上からクライアント ID と秘密キーをコピー&ペーストします。'
        clientId:
          labelText: クライアント ID
        clientSecret:
          labelText: クライアント秘密キー
        ghEnterprise:
          labelText: プライベートの GitHub エンタープライズを使う
        isGHEnterprise:
          labelText: セキュア接続を使う
        enterpriseHost:
          labelText: エンタープライズホスト
          placeholder: '例: github.example.com'
    testAuth:
      header: '3. テストのうえ認証を有効化する'
      subtext: '認証テストを行うことであなたのアプリケーションが正常に設定されたことを確認します:'
      buttonText:
        pre: GitHubアカウントで認証
        post: GitHub からの返答を待っています
  azuread:
    header:
      enabled: 'Azure AD 認証が <b>有効</b> です'
      disabled: 'Azure AD 認証が 設定されていません'
    subtext:
      enabled: '{appName} は Azure AD アカウントがアクセスできるよう設定されています'
      disabled: '{appName} は {appName} データベースで定義されたいくつかのアカウントに対してアクセスを制限するよう設定できます。現在はこの設定がされていないため、このページ(または API)にアクセスできる全ての人がシステムを介してフルコントロールすることができます。'
    enabled:
      header: 'Danger Zone&trade;'
      warning: '<b class="text-danger">注意:</b> アクセスコントロールを無効化すると、このページや API にアクセスできる全ての人が {appName} 経由でフルコントロールすることができます。'
      reallyDisable: '本当によろしいですか? アクセスコントロールを無効化する場合は再度クリックしてください'
      promptDisable: アクセスコントロールを無効化
    configure:
      header: '1. Azure AD アカウントを設定する'
      tenantId:
        label: テナント ID
        placeholder: A long UUID string
        help: Azure AD ポータルから取得
      clientId:
        label: クライアント ID
        placeholder: A long UUID string
      domain:
        label: ドメイン
        placeholder: '例: youcompany.onmicrosoft.com'
      adminAccountUsername:
        label: 管理者アカウント ユーザー名
        placeholder: '例: rancher-admin'
        help: 他のユーザーの情報を見ることができるユーザー
      adminAccountPassword:
        label: 管理者アカウント パスワード
    test:
      header: '2. テストのうえ認証を有効化する'
      help: 'あなたのアカウントで認証テストを行うことで全てが正常に設定されたことを確認します:'
      username:
        label: ログイン ユーザー名
        placeholder: '例: jsmith'
      password:
        label: ログイン パスワード
      pre: Azure で認証
      post: Azure からの返答を待っています
  localAuth:
    header:
      enabled: 'ローカル認証が 有効 です'
      disabled: 'ローカル認証は設定されていません'
    subtext:
      enabled:
        text: '{appName} はローカルデータベースを利用したアクセス許可が設定されています。'
        linkText: アカウントを管理
      disabled: '{appName} は {appName} データベースで定義されたいくつかのアカウントに対してアクセスを制限するよう設定できます。現在はこの設定がされていないため、このページ(または API)にアクセスできる全ての人がシステムを介してフルコントロールすることができます。'
    accessEnabled:
      header: 'Danger Zone&trade;'
      warning: '<b class="text-danger">注意:</b> アクセスコントロールを無効化すると、このページや API にアクセスできる全ての人が {appName} 経由でフルコントロールすることができます。'
      buttonText:
        disable: '本当によろしいですか?  アクセスコントロールを無効化する場合は再度クリックしてください'
        prompt: アクセスコントロールを無効化
    accessDisabled:
      header: '1. 管理者ユーザーをセットアップする'
      helpText: 'このユーザーは {appName} 上でのフルコントロール権限を持つ管理者になります。'
      form:
        login:
          labelText: ログイン ユーザー名
          placeholder: '例: jsmith'
        name:
          labelText: 姓名
          placeholder: '例: ジョン スミス'
        password:
          labelText: パスワード
        confirmPassword:
          labelText: パスワード(確認用)
    accessControl:
      header: '2. アクセスコントロールを有効化する'
      helpText: 'ローカル認証を有効化をクリックしてログインします。'
      buttonText:
        pre: ローカル認証を有効化
        post: '有効化中...'
  0:
    header: アクセスコントロール
balancerPage:
  noMatch: 検索条件に一致するバランサーがありません
  noData: 表示するバランサーはありません
  table:
    target: 対象
catalogPage:
  index:
    header: カタログ
    refreshBtn: 再読み込み
    manage: 管理
    search:
      label: 検索
    filters:
      label: カタログフィルター
    certified:
      rancher:
        rancher: Rancher Labs
        partner: 公式
      pl:
        rancher: コア
        partner: 公式
    noData:
      singular: 互換性のあるテンプレートがありません
      plural: このカタログには互換性のあるテンプレートがありません
    action:
      launch: 詳細を見る
      notCompatible: 互換性がありません
      alreadyDeployed: 既にデプロイ済みです
certificatesPage:
  cn: ドメイン名
  expiresDate: 有効期限
  fingerprint: フィンガー プリント
  valid: 有効な発行日
  expires: 有効期限
  algorithm: アルゴリズム
  issuer: 報告者
  serialNumber: シリアルナンバー
  domainNames:
    labelText: ドメイン名
    single: '<a href="https://{cn}" target="_blank" rel="nofollow nefererrer noopener">{cn}<i class="icon icon-sm icon-external-link"/></a>'
    wildcardSingle: '{cn}'
  detail:
    header: '証明書: {name}'
  index:
    header: 証明書
    linkTo: 証明書を追加
  new:
    header: 証明書を追加
    form:
      name:
        placeholder: '例: mydomain.com'
      description:
        placeholder: '例: mydomain.com の EV 証明書'
membersPage:
  title: メンバー
  add:
    title: '{type} メンバーを追加'
    form:
      member: メンバー
      role: ロール
      kind: 種類
  index:
    localLink: 'メンバーを追加'
    table:
      name: 名前
      created: 作成日
      noData: まだメンバーはいません
      noMatch: 検索条件に一致するメンバーがいません
      subjectKind: 種類
namespacesPage:
  header: 名前空間
  addNamespace: 名前空間を追加
  noMatch: 検索条件に一致する名前空間がありません
  table:
    name:
      label: 名前空間
    description:
      label: 詳細情報
    project:
      label: プロジェクト
    pods:
      label: ポッド
    workloads:
      label: ワークロード
    created:
      label: 作成日
clusterPage:
  edit: クラスターを編集
projectsPage:
  addProject: プロジェクトを追加
  editProject: プロジェクトを編集
clustersPage:
  header: クラスター
  newCluster: クラスターを追加
  cluster:
    label: クラスター名
  cpu:
    label: CPU
  memory:
    label: RAM
  pod:
    label: ポッド
  storage:
    label: ディスク
ingressPage:
  header: 'イングレス: {name}'
  table:
    noMatch: 検索条件に一致するイングレスがありません。
containerPage:
  header: 'コンテナ: {name}'
  portsTab:
    header: ポート
    detail: 'コンテナのリッスンしているポートとホストのパブリック IP アドレス上のポートのマッピングを設定します'
    hostPrimaryIp: '({ip})'
  linksTab:
    header: リンク
    detail: 'これらの属性値はこのコンテナと他のコンテナ間のリンク情報を示します'
    noData: このコンテナにはリンクはありません
  volumesTab:
    header: ボリューム
    detail: 'これらの属性値はコンテナにアタッチされているボリュームを示します'
    table:
      path: マウントポイント
      shared: 共有対象
      writable: 書き込み可能
      noData: このコンテナにはマウントされているボリュームがありません
      noMatch: 検索条件に一致するボリュームがありません
      noContainers: コンテナはありません
containersPage:
  table:
    sparkPrefixCpu: "CPU: "
    sparkPrefixMemory: "メモリ: "
    sparkPrefixNetwork: "ネットワーク: "
    sparkPrefixStorage: "ストレージ: "
    noData: 表示するコンテナはありません
    noMatch: 検索条件に一致するコンテナがありません
  welcome:
    container: 始めましょう
    containerLink: コンテナを追加
    orchestrator: 他のオーケストレーターをインストール
    kubernetesLink: Kubernetes をインストール
clusterDashboard:
  cpu: CPU
  memory: メモリ
  pods: ポッド
  subtitle: "{total} のうち {used} を使用中"
  node: ノード
  scheduler: スケジューラー
  controllerManager: コントローラーマネージャー
  value: 値
  noNodes: ノードはありません
  alert:
    node: "注意: ノード {node} はアクティブではありません。"
    component: "注意: コンポーネント {component} は不健全です。"
dnsPage:
  noMatch: 検索条件に一致するレコードはありません
  noData: 表示する DNS レコードはありません
  type:
    alias: エイリアス
    selector: セレクター
    unknown: 不明
  table:
    target: 対象
editDns:
  name:
    placeholder: '例: myapp'
  description:
    placeholder: '例: 最新版の MyApp'
  selector:
    label: コンテナ ラベルセレクター
failWhalePage:
  header: エラー
  reloadButton: |
    再度試してみるために以下を実施してください<br> <a href="#" onclick="window.location.href = window.location.href; return false;">再読み込み</a>または
  logoutButton: ログアウト
time:
  now: 今
  mins: |
    {mins, plural,
    =1 {# 分}
    other {# 分}
    }
  minsAgo: |
    {mins, plural,
    =1 {# 分前}
    other {# 分前}
    }
  secsAgo: |
    {secs, plural,
    =1 {# 秒前}
    other {# 秒前}
    }
haPage:
  header: 高可用性
  setup:
    prefix: "ホストの障害時に {appName} が稼働し続けるよう複数のサーバーコンテナを異なるホストにデプロイ出来ます。  "
    link: ドキュメントを参照してください
    suffix: "セットアップと使用方法についてご確認ください。"
  table:
    address: 通知アドレス
    port: ポート
    heartbeat: 最終通知時刻
    clustered: クラスター
nodesPage:
  header: ノード
  table:
    clusterName: クラスター
    role: ロール
    cpu: CPU
    memory: RAM
    disk: ディスク
    pod: ポッド
    docker: Docker
    instanceState: コンテナの状態
    instanceStateWithIcon: 状態
    noMatch: 検索条件に一致するノードがありません
hostsPage:
  cloudHostsPage:
    addPage:
      launch: 起動
      header: ノードを追加
      name:
        label: ノード名
        placeholder: '例: node01'
      transferUnit: TB
      instance: 'タイプ:'
      storage: 'ストレージ'
      transfer: '転送量:'
      zone: 'ゾーン:'
      env: '環境:'
      size: 'サイズ:'
      os: 'OS:'
      driver: 'ドライバー:'
      template: 'テンプレート名:'
  addContainer: コンテナを追加
  new:
    header:
      customText: カスタムホストを追加
      text: ノードを追加
    manageLink: 利用可能なマシンドライバーを管理
    custom: カスタムホストを追加
    name:
      placeholder: '例: node01'
    addCluster:
      label: "クラスターオプション"
      description: この新しいnodeをクラスタに接続し、役割を委任するなど
      cluster:
        label: クラスター
      roles:
        label: ロール
      table:
        label:
          etcd: etcdとして利用
          control: 管理ノードとして利用
          worker: ワーカーノードとして利用
  hostPage:
    header:
      title: 'ノード: {name}'
    hostname: ホスト名
    ipAddress: IP アドレス
    conditions:
      diskSpace: ディスクスペース
      diskPressure: ディスク使用率
      memoryPressure: メモリ使用率
      ready: Kubelet
    limits:
      cpu: 'CPU 制限:'
      memory: 'メモリ制限:'
      storage: 'ローカルボリューム制限:'
    infoMultiStats:
      ip: 'IP'
      cpu: 'CPU'
      memory: 'メモリ'
      storage: 'ボリューム'
      provider:
        labelText: 'プロバイダー:'
        noHost: カスタム
      kernel: 'カーネル'
      docker: 'Docker:'
      os: 'OS'
      milliCpu:
        labelText: mCPU
    containersTab:
      header: コンテナ
      detail: このホスト上で稼働しているコンテナのリストです
    portsTab:
      header: ポート
      detail: 'これらの属性値はどのポートがどこにマッピングされているかを示します'
      table:
        header:
          ip: IP アドレス
          port: ポート
          service: サービス
          container: コンテナ
        body:
          noData: まだこのホストにはパブリックポートがありません
    storageTab:
      header: ボリューム
      detail: 'これらのプロパティはホスト上のボリュームの詳細を示します'
      table:
        header:
          state: 状態
          hostPath: ホストパス
          mounts: マウント
        body:
          noData: まだこのホストにはボリュームがありません
k8sPage:
  header: Kubernetes
  dashboard:
    title: ダッシュボード
    detail: Kubernetes のネイティブダッシュボードにアクセス
    button: ダッシュボードを起動
  shell:
    title: シェル
    detail: ブラウザから <code>kubectl</code> コマンドを実行します。
    button: kubectlを起動
  configFile:
    title: 設定ファイル
    detail: <code>kubectl</code> をデスクトップで利用するために Kubernetes 設定ファイルを生成します。
    button: Kubeconfigファイル
    generating: 生成中...
    usage:
      helpText: |
        以下を <code>~/.kube/config</code> に記述します:
      downloadText: |
        次に、(必要なら) <a href="{downloadUrl}" target="_blank">ダウンロード</a>したのち、<code>kubectl</code> を実行します。
loginPage:
  greeting: "こんにちは！<br><span>{appName} へようこそ</span>"
  githubMessage: "{appName} はアカウントやチームの管理に GitHub を利用しています。 ログインしてあなたの GitHub アカウント情報に読み込み権限でアクセスするために以下のボタンを押して下さい。"
  shibbolethMessage: "{appName} はアカウントの管理にシボレスを利用しています。 設定済みのシボレス IDP にログインするには以下のボタンを押して下さい。"
  shibbolethError:
    401: "認証に失敗しました"
    500: "サーバ内部エラー"
    generic: "ログイン中にエラー {{errorCode}} が発生しました。もう一度やり直してください。"
machinePage:
  header: ノードドライバー
  inactive: 休止
  subtext: "追加の <code>docker-machine</code> ドライバーをここからロードして、ノードの追加画面で利用することができます。"
  add: ノードドライバーを追加
  builtin: ビルトイン
  url: ロケーション
notFoundPage:
  header: "お探しのページは存在しません!"
  linkTo: ホームに戻る
registriesPage:
  index:
    linkTo: レジストリを追加
    table:
      header:
        state: 状態
        address: アドレス
        username: ユーザー名
        created: 作成日
      body:
        noData: "まだレジストリの資格情報がありません"
  new:
    header: レジストリを追加
    form:
      custom:
        labelText: アドレス
        placeholder: '例: registry.example.com'
        help: プロトコル (https://) を含まないホスト名または IP アドレス
      username:
        labelText: ユーザー名
        placeholder: '例: username'
      password:
        labelText: パスワード
        placeholder: '例: password'
secretsPage:
  index:
    header: シークレット
    linkTo: シークレットを追加
    noMatch: 検索条件に一致するシークレットがありません
  table:
    keys: キー
servicePage:
  globalScale: 'ホスト毎に {scale}'
  multistat:
    fqdn: 'FQDN:'
    scale: 'スケール:'
    image: 'イメージ:'
  external:
    externalIp: |
      {count, plural,
      =1 {外部IP:}
      other {外部IP:}
      }
    externalHostname: '外部ホスト名:'
  selector:
    label: 'セレクター:'
  containersTab:
    title: 'コンテナ'
    detail: 'このサービスを構成するコンテナ。'
  linksTab:
    header: リンク
    detail: 'これらの属性値はこのサービスと他のコンテナ間のリンク情報を示します'
    noData: このサービスにはリンクはありません
  certsTab:
    title: 証明書
    detail: '証明書はリクエストの TLS 終端処理に利用されます'
    default: デフォルト証明書
    additional: 追加の SNI 証明書
  new:
    form:
      name:
        placeholder: '例: myapp'
      description:
        placeholder: '例: マイアプリケーション'
  newBalancer:
    upgradeImage: "バランサーのソフトウェア イメージは、<code>{from}</code> から <code>{to}</code> にアップグレードされます。"
    form:
      name:
        placeholder: '例: ウェブサイト'
      description:
        placeholder: '例: mycompany.com に対してのバランサー'
  newIngress:
    form:
      name:
        placeholder: '例: ウェブサイト'
      description:
        placeholder: '例: mycompany.comのイングレス'
  portsTab:
    title: ポート
    detail: 'ホストIPからコンテナのリスニングポートにマッピングされたポート。'
    notActive: ポートはサービスがアクティブの場合のみ利用できます。
  logTab:
    title: サービスログ
    detail: 'このサービスに関して直近のオーケストレーションで発生したイベント情報です'
  type:
    service: サービス
    selectorservice: セレクター
    loadbalancerservice: ロードバランサー
    dnsservice: エイリアス
    externalservice-ip: 外部 IP アドレス
    externalservice-host: 外部名
    kubernetesservice: K8s サービス
    composeservice: 構成サービス
    networkdriverservice: ネットワークサービス
    storagedriverservice: ストレージサービス
signupPage:
  header: '{appName} にサインアップ'
  form:
    button: 登録
    labels:
      loginUsername: ユーザー名
      email: E-mail アドレス
  emailSuccess:
    header: '{appName} へようこそ'
    confirm:
      subtext: 送信済みのメールから確認用リンクをクリックしてください
      resend: メールを再送信
stackPage:
  header:
    singleBanner: 単一スタックビュー
    backLink: 全てのスタック表示に戻る
  basics:
    tagsCopy: タグをカンマ区切りリストとしてコピーする
  containers:
    header: コンテナ
    detail: このスタックに含まれるスタンドアロンコンテナとサービス
    status: |
      {count, plural,
      =0 {コンテナはありません}
      =1 {# コンテナ}
      other {# コンテナ}
      }
  loadBalancers:
    header: ロードバランサー
    detail: 'ロードバランサーコンテナはこのスタックに含まれています'
    status: |
      {count, plural,
      =0 {バランサーはありません}
      =1 {# バランサー}
      other {# バランサー}
      }
  dnsServices:
    header: DNS エントリ
    detail: 'ロードバランサーはこのスタックに含まれています'
    status: |
      {count, plural,
      =0 {エントリーはありません}
      =1 {# エントリー}
      other {# エントリー}
      }
  scalingGroups:
    header: スケーリンググループ
    detail: 'このスケーリンググループに存在するコンテナ'
    status: |
      {count, plural,
      =0 {コンテナはありません}
      =1 {# コンテナ}
      other {# コンテナ}
      }
  volumesTab:
    header: ボリューム
    detail: 'これらのプロパティは、コンテナに接続されたボリュームを示します。'
    table:
      path: マウントポイント
      shared: 共有者
      writable: 書き込み可能
      noData: このスタックにはマウントされているボリュームがありません
      noMatch: 検索条件に一致するボリュームがありません
newStack:
  name:
    placeholder: '例: myapp'
  description:
    placeholder: '例: MyApp スタック'
  files:
    label: ファイル
    addActionLabel: ファイルを追加
    uploadActionLabel: ディスクから読み込み
    namePlaceholder: ファイル名
    valuePlaceholder: ファイルの内容
    protipLabel: '{appName} <code>compose.yml</code>, <code>docker-compose.yml</code> または Kubernetes マニフェストファイルがサポートされます'
  answers:
    label: 回答(変数置換を含む)
    addActionLabel: 回答を追加
userPreferencesPage:
  header: アカウント設定
  theme:
    header: テーマ
    light: Light
    auto: 自動
    autoDetail: 自動では 6pm-6am の間 dark に変わります
    dark: Dark
  generalInfo:
    header: マイアカウント
    name:
      label: 名前
    username:
      label: ユーザー名
    email:
      label: E メールアドレス
    password:
      text: パスワードを変更
verifyPage:
  header: "E メールアドレスの検証に成功しました!"
  subtext: アカウント情報の処理を完了する前にさらにいくつかの情報を入力する必要があります
  account:
    header: アカウントは作成されました
    subtext: ログインページに移動するには、以下のリンクをクリックします
    linkText: ログイン
verifyResetPasswordPage:
  header: パスワードをリセット
  button: パスワードを更新
  success:
    header: パスワードはリセットされました!
    subtext: ログインページに移動するには、以下のリンクをクリックします
    linkText: ログイン
waitingPage:
  hosts:
    setup:
      kubernetes: Kubernetes をセットアップ
ldap:
  providerName:
    openldap: OpenLDAP
    ad: Active Directory
  header:
    enabled:
      label: "{providerName} は有効化されていません"
      required: |
        {appName} は {groups, plural,
        =0 {0 グループ}
        =1 {# グループ}
        other {# グループ}
        } と {users, plural,
        =0 {0 ユーザー}
        =1 {# ユーザー}
        other {# ユーザー}
        }に対しアクセス許可が設定されています。
      restricted: |
        {appName} は環境のメンバーと {groups, plural,
        =0 {0 グループ}
        =1 {# グループ}
        other {# グループ}
        }, {users, plural,
        =0 {0 ユーザー}
        =1 {# ユーザー}
        other {# ユーザー}
        }に対しアクセス許可が設定されています。
      unrestricted: "{appName} は全ての {providerName} ユーザーに対しアクセス許可が設定されています。"
    disabled:
      label: "{providerName} は設定されていません"
      warning: "{appName} はいくつかの {providerName} ユーザーやグループに対してアクセスを制限するよう設定できます。現在はこの設定がされていないため、このページ(または API)にアクセスできる全ての人がシステムを介してフルコントロールすることができます。"
  accessEnabled:
    header: 認証
    subtext: "サーバー設定を変更するには以下のアクセスコントロールを無効化し、再度設定し直して下さい。"
    general:
      header: 一般
      server: "サーバー:"
      tls: "TLS:"
      serviceAccount: "サービスアカウント:"
      searchBase: "サーチベース:"
      defaultDomain: "デフォルトドメイン:"
    users:
      header: ユーザー
      objectClass: "オブジェクトクラス:"
      login: "Login Field:"
      name: "Name Field:"
      search: "Search Field:"
      enabled: "Status Field:"
      disabledBitMask: "Disabled BitMask:"
    group:
      header: グループ
      objectClass: "オブジェクトクラス:"
      name: "Name Field:"
      search: "Search Field:"
    disable:
      header: "Danger Zone&trade;"
      warning: '<b class="text-danger">注意:</b> アクセスコントロールを無効化すると、このページや API にアクセスできる全ての人が {appName} 経由でフルコントロールすることができます。'
      confirmDisable:
        pre: アクセスコントロールを無効化
        post: "本当によろしいですか? アクセスコントロールを無効化する場合は再度クリックしてください"
  accessConfig:
    header: "1. {providerName} サーバーを設定"
    subtext1: "あなたの {providerName} サーバーに接続するため、アドレス、ポート、プロトコルを入力してください。通常は <code>389</code> 番ポートが利用され、<code>636</code>はTLSに利用されます。"
    subtext2: "{appName} はユーザーがどのグループに所属しているか、いつ API キーでリクエストを発行したかなどを特定し、ログイン処理を実行するために全てのドメインに対して (read-only) アクセスが可能なサービスアカウントを必要とします。"
    port:
      labelText: ポート
      checkbox: TLS
    groupSearchBase:
      labelText: グループ サーチベース
      placeholder: "例: ou=Groups,dc=mycompany,dc=com"
      helpText: "設定した場合、ユーザー検索ベースの代わりにこちらのベースがグループの検索に利用されます"
    defaultDomain:
      helpText: "一部を除き、ユーザーがログインする際このドメインが使用されます。"
      labelText: デフォルト ログインドメイン
      placeholder: "例: mycompany"
  customizeSchema:
    header: "2. スキーマのカスタマイズ"
    helpText: "スキーマが標準的な ActiveDirectory フォーマットに一致しない場合、こちらでカスタマイズすることができます。"
    users:
      header: ユーザー
      objectClass:
        labelText: オブジェクトクラス
      disabledBitMask:
        labelText: Disabled Status Bitmask
      userMemberAttribute:
        labelText: ユーザーメンバー属性
    groups:
      header: グループ
      objectClass:
        labelText: オブジェクトクラス
      groupMemberUser:
        labelText: グループメンバーのユーザー属性
        placeholder: uid
      groupMemberMapping:
        labelText: グループメンバー マッピング属性
      groupDN:
        placeholder: 識別名
  testAuth:
    header: "3. テストのうえ認証を有効化する"
    helpText: "あなたの {providerName} アカウントで認証テストを行うことで全てが正常に設定されたことを確認します:"
    userName:
      labelText: ユーザー名
    password:
      labelText: パスワード
    authenticate:
      pre: 認証
      post: "テスト中..."
servicePartial:
  noContainers:
    label: まだコンテナはありません
    inactive:
      start: 開始
accordionRow:
  status:
    none: なし
    incomplete: 未完了
    error: エラー
    notConfigured: 未設定
    configured: 設定済み
    countConfigured: "{count} 設定済み"
    standard: デフォルト
    custom: カスタマイズ済み
    specific: 特定
    any: どれか
    rule: "{count, plural, =1 {# ルール} other {# ルール}}"
advancedSection:
  showText: 詳細オプションを表示
  hideText: 詳細オプションを隠す
annotationsSection:
  title: アノテーション
  detail: キー/値メタデータ
  key: キー
  value: 値
  noData: アノテーションはありません。
  noMatch: 検索条件に一致するアノテーションがありません
billingInfo:
  header: 請求情報
  addNew: 支払い方法を追加
  card: "{brand}: ...{last}"
  noSub: アクティブな請求情報がありません
  table:
    title:
      cardType: "ブランド: {brand}"
      last4: "下4桁: {last}"
      exp: "有効期限: {exp}"
      name: "カード記載名: {name}"
      actions: アクション
caasLogin:
  resetHeader: パスワードリセット
  new: アカウントを作成
  reset: パスワードリセット
  resetSuccess: 成功しました! パスワードを変更するにはメール内のリンクを確認してください
  error: メールアドレスの確認に失敗しました、E メールアドレスが正しいか確認してもう一度やり直してください
  invalidEmail: 入力された E-mail アドレスは有効ではありません。正しい E-mail アドレスを入力しもう一度やり直してください。
  login: ログインページ
  form:
    email: E メールアドレス
catalogSettings:
  header: カタログ
  notAvailable: "利用不可: <code>{name}</code> というカスタムカタログがあります"
  certified:
    header:
      rancher: "{appName} 認証済みライブラリ"
      pl: 認証済みライブラリ
    detail:
      rancher: テンプレートは Kubernetes オーケストレーションサポートのような Rancher のコアとなる機能に必要となり、Rancher Labs によりメンテナンス、サポートされます。
      pl: 公式にメンテナンスされているテンプレートは Kubernetes のようなコアとなる機能に必要となります。
  community:
    header:
      rancher: コミュニティサポート
      pl: コミュニティサポート
    detail:
      rancher: テンプレートはコミュニティメンバーによって作成、メンテナンスされ、Rancher Labs によって認証されていません。
      pl: テンプレートはコミュニティメンバーによって作成、メンテナンスされ、
  more:
    header: カスタム
    helpText: '独自のカスタムカタログソースを定義できます。それぞれのソースには、固有の名前と、<code>git clone</code> で使用される URL が必要です。(詳細については<a href="https://git-scm.com/docs/git-clone#_git_urls_a_id_urls_a" target="_blank" rel="nofollow noopener noreferrer">こちら</a>を参照してください。)'
    addActionLabel: カタログを追加
    noMatch: 検索条件に一致するカタログがありません。
    noData: まだカスタムカタログは定義されていません
    addHeader: カタログを追加
    editHeader: カタログを編集
    name:
      label: 名前
      placeholder: '例: my catalog'
    url:
      label: URL
      placeholder: '例: https://github.com/mycompany/mycatalog.git'
    kind:
      label: 種類
      native: ネイティブ
      helm: Helm
    branch:
      label: ブランチ
      placeholder: '例: master'
clusterRow:
  noMatch: 検索条件に一致する環境がありません。
  noData: このクラスターにはまだ環境はありません。
  noHosts: 外部クラスタにはノードがありません
  noClusterMatch: 検索条件に一致するクラスターがありません。
  noClusterData: まだクラスターはありません
  addHost: ノードを追加
  importCluster: 既存の Kubernetes を利用
  loginDefault: ログイン
clusterWelcome:
  welcome: ようこそ！
  noHost: このクラスターにはまだホストが存在しません。新たにホストを追加しますか? それとも既存の Kubernetes 環境を利用しますか?
  addHost: ノードを追加
  select: 選択
  importCluster: 既存の Kubernetes を利用
  embeddedDescription: |
    <p>{appName} は自動的に Kubernetes をデプロイし管理します。</p>
    <p>{appName} がサポートするクラウドプロバイダー上にホストをデプロイするか Docker がインストールされている既存ホストを利用することができます。</p>
    <p>仮想マシンやベアメタル、オンプレミスやパブリッククラウドなど様々な組み合わせがサポートされ、</p>
    <p>ホスト間を超えたコンテナ間の通信にはセキュアなオーバーレイネットワークが提供されます。
    </p>
conditionSections:
  table:
    type: タイプ
    status: ステータス
    lastUpdate: 最終更新
    reason: 理由
    message: メッセージ
confirmDelete:
  title: '本当に削除してもよろしいですか?'
  protip: 'ProTip: この確認画面を飛ばす場合は削除ボタンのクリック時に {key} キーを長押ししてください。'
  confirmAction: 削除
  cancelAction: キャンセル
  largeDeleteText: '{key} さんと他 {othersCount} 人'
containerLogs:
  onlyCombined: "<b>Note:</b> このコンテナでは TTY (-t) フラグが有効なため、標準出力/標準エラー出力が結合されたログのみが利用可能です。"
  combined: 結合された出力
  stdout: 標準出力
  stderr: 標準エラー出力
  protip: "ProTip: 新しいウィンドウで起動する場合はログを開く際に {key} を長押ししてください。"
  scrollTop: トップにスクロール
  scrollBottom: 下部にスクロール
  clear: スクリーンをクリア
  status:
    initializing: 初期化中...
    connecting: 接続中...
    connected: 接続完了
    disconnected: 切断
    closed: 閉じる
containerShell:
  protip: "ProTip: 新しいウィンドウで起動する場合はシェルアクセスを開く際に {key} を長押ししてください。"
  status:
    initializing: 初期化中...
    error: "エラー: {error}"
    connecting: 接続中...
    connected: 接続完了
    disconnected: 切断
    closed: 閉じる
copyToClipboard:
  tooltip: クリップボードにコピー
  copied: コピーしました!
cruRegistry:
  title:
    new: レジストリを追加
    edit: 'レジストリの編集: {name}'
    view: 'レジストリ: {name}'
  address:
    label: アドレス
    dockerhub: DockerHub
    quay: Quay.io
    custom: カスタム
    placeholder: '例: registry.example.com'
  multiple: 複数
  auth:
    label: 認証トークン
    saved: 保存しました
  username:
    label: ユーザー名
  password:
    label: パスワード
    saved: 保存しました
dangerZone:
  header: 拡張設定
  subtext: "一般的なユーザーの場合、これらを変更する必要はありません。間違った値を指定するとあなたの {appName} が壊れる可能性がありますので、慎重に進めてください。<br/>既定の値から変更された設定値は<b>太字</b>で表示されます。"
  showLabel: 私は拡張設定を変更することで問題が生じる可能性があると理解しています。
editAccount:
  title: アカウントを編集
  form:
    name:
      label: 表示名
      placeholder: '例: ジョン スミス'
    kind:
      label: アカウントタイプ
      user: ノーマルユーザー
      admin: "管理者：すべてのクラスタのすべてを管理するフルアクセス"
    description:
      label: 詳細情報
      placeholder: '例: このアカウントは、ジョン ・ スミス用です'
    publicValue:
      label: ユーザー名
    oldPassword:
      label: 現在のパスワード
    newPassword:
      label: 新しいパスワード
    confirmPassword:
      label: 新しいパスワード(確認用)
    identity:
      label: ID
editApiKey:
  title:
    justCreated: API Key は作成されました
    editing: API キーを編集
  saveWarning2: もしキーを無くしてしまった場合、新しい API キーを作成する必要があります。
editCertificate:
  title: 証明書を編集
  name:
    placeholder: '例: mydomain.com'
  description:
    placeholder: '例: mydomain.com の EV 証明書'
  noteKeyWriteOnly: "注: プライベートキーは書き込み専用のためあえて空にしています。プライベートキーを変更する場合を除いて、これを入力する必要はありません。"
editCluster:
  title:
    new: クラスターを追加
    edit: クラスターを編集
  name:
    label: 名前
    placeholder: e.g. Sandbox
  description:
    label: 詳細情報
    placeholder: e.g. Shared cluster for development
  systemStacks:
    hr: クラスターオプション
    title: システムカタログスタック
    detail: これらのスタックはクラスタのシステム環境上に自動的にデプロイされます
    noData: システム環境にデプロイされるスタックはありません
    add: スタックを追加
    cancel: システムスタックの追加をキャンセル
  modal:
    onCluster: "重要: 現在の環境を所有するクラスターを削除しようとしています。このクラスターを削除する前に、別のクラスター内の新しい環境を選択してください"
editContainer:
  title:
    vm: VM を編集
    container: コンテナを編集
  name:
    placeholder: '例: myapp'
  description:
    placeholder: '例: マイアプリケーション'
editHost:
  hostname:
    label: ホスト名
    help: ノードのOSによって決定されます。
  customName:
    label: カスタム名
    placeholder: '例: dev1'
    help: 空の場合、ホスト名が表示されます。
  description:
    label: 詳細情報
    placeholder: '例: 私の開発用ノード'
  labels:
    label: ラベル
  ips:
    label: スケジューラ IP
    valueLabel: IP アドレス
    valuePlaceholder: '例: 1.2.3.4'
    addActionLabel: IP アドレスを追加
    help: 入力された場合、スケジューラが与えられたパブリック IP アドレス群から対象を選択し公開ポートをバインドします。
  requireAny:
    label: 必要となるコンテナラベル
    help: 指定した場合、このノードに適切にスケジューリングされるようコンテナは1つまたは複数のラベルを設定する必要があります。値を空のままにした場合一致するキーの有無に関わらずコンテナはスケジュールされます。システムコンテナをこのノードにスケジューリングするには<code>io.rancher.container.system</code> が必要となります。
    addActionLabel: 必要となるラベルを追加
editService:
  title: サービスを編集
editStack:
  title: 名前空間を編集
  name:
    label: 名前
    placeholder: '例: myapp'
  project:
    label: プロジェクト
    prompt: プロジェクトを選択してください...
  description:
    label: 詳細情報
    placeholder: '例: MyApp 名前空間'
  group:
    label: タグ
    placeholder: '例: frontend, production'
    help: 新しいスタックのタグのカンマ区切りリスト。ワークロードの一覧は個々のタグでフィルタリングすることができます。
editUser:
  title: ユーザーの編集
  form:
    name:
      label: 表示名
      placeholder: '例: Taro Yamada'
    username:
      label: ユーザー名
    otherRoles:
      label: ロールを削除
    password:
      label: パスワードを変更
      new: 新しいパスワード
      confirm: 新しいパスワード(確認用)
      error: パスワードが一致しません
envCatalog:
  header: カタログ
  subtext: '独自のカスタムされたカタログソースを定義できます。カタログは、追加された環境下でのみ利用できます。それぞれのカタログには固有の名前と <code>git clone</code> 可能な URL が必要です。(詳細は <a href="https://git-scm.com/docs/git-clone#_git_urls_a_id_urls_a" target="_blank" rel="nofollow noopener noreferrer">docs</a> を参照してください)。'
  addActionLabel: カタログを追加
moveNamespace:
  title: |
    {count, plural,
    =1 {個の名前空間: {name}}
    other {# 個の名前空間}
    }の移動: 
  to: "移動先のプロジェクト:"
  actionLabel: 移動
stackHeader:
  title: '名前空間: {name}'
  outputs: 出力
stacksPage:
  table:
    standalone: 独立型コンテナ
    endpoints: エンドポイント
    scale: スケール数
    instanceState: コンテナの状態
    instanceStateWithIcon: 状態
formatIp:
  noIp: None
formBalancerConfig:
  title: カスタムの設定ファイル
  detail: '{appName} によって生成された設定より上位に適用するためのカスタム設定ファイルを指定してください'
  config:
    prompt: カスタムされた haproxy.cfg の内容
formIngress:
  defaultBackend:
    label: このルールをデフォルトのバックエンドとして設定する
    mark: デフォルトのバックエンド
  label: ルール
  addRuleLabel: ルールを追加
  removeRuleLabel: このルールを削除
  noRules: ルールはありません
  host:
    label: リクエストホスト
    placeholder: "例: example.com"
  backendType:
    label: バックエンドタイプ
  mode:
    workload: ワークロード
    service: DNS レコード
formIngressBackends:
  noRules: バックエンドはありません。
  service:
    label: サービス
  workload:
    label: ワークロード
  targetPort:
    label: ポート
    placeholder: '例: 80'
  path:
    label: パス
    placeholder: '例: /foo'
  target: 対象
formBalancerListeners:
  label: リスナー & ターゲットルール
  detail: バランサーに入ってくるリクエストを目的のターゲットにマッピングするよう制御します。
  status: |
    {count, plural,
    =0 {ルールはありません}
    =1 {# ルール}
    other {# ルール}
    }
  noRules: ルールはありません
  addPortLabel: リスニングポートを追加
  removePortLabel: このリスニングポートを削除
  showBackendLabel: "バックエンド名をカスタマイズ"
  access:
    label: アクセス
    public: パブリック
    internal: インターナル
  protocol:
    label: プロトコル
  sourceIp:
    label: ホスト IP
    placeholder: "例: 1.2.3.4; デフォルト: All"
  sourcePort:
    label: リスニングポート
    placeholder: '例: 80'
  help: "ホストとパスルールは表示順の上部から下部に向かって評価されます。バックエンドはデフォルトではランダムの名前がつけられ、生成されるバックエンド名をカスタマイズする場合は名前を付与することでカスタマイズされた haproxy.cfg 内部で指定した名前を参照します。"
formBalancerRules:
  label: ターゲットルール
  detail: ホストまたはポート、パス、IPアドレスに応じて、異なるターゲットにリクエストをマップします。
  status: |
    {count, plural,
    =0 {ルールはありません}
    =1 {# ルール}
    other {# ルール}
    }
  noRules: ルールはありません
  addServiceLabel: サービスを追加
  addInstanceLabel: コンテナを追加
  addSelectorLabel: セレクターを追加
  addTargetLabel: ルールを追加
  access:
    label: アクセス
    public: パブリック
    internal: 内部
  protocol:
    label: プロトコル
  sourceIp:
    label: ホスト IP
    placeholder: "例: 1.2.3.4; デフォルト: All"
  sourcePort:
    label: リッスンポート
    placeholder: '例: 80'
  path:
    label: パス
    placeholder: '例: /foo'
  hostname:
    label: リクエストホスト
    placeholder: '例: example.com'
  backendName:
    label: バックエンド
    placeholder: '例: webapp'
  targetPort:
    label: ポート
    placeholder: '例: 80'
  priority:
    label: 優先度
  target: 対象
  selector:
    label: セレクタ
    placeholder: '例: foo=bar'
formCommand:
  title: コマンド
  detail: コンテナ起動時に実行されるコマンドを設定します
  command:
    label: コマンド
    placeholder: '例: /usr/sbin/httpd -f httpd.conf'
  entryPoint:
    label: エントリーポイント
    placeholder: '例: /bin/sh'
  environment:
    label: 環境ラベル
  workingDir:
    label: ワーキングディレクトリ
    placeholder: '例: /myapp'
  uid:
    label: ユーザー ID
    placeholder: '例: 501'
  console:
    label: コンソール
    both: 'インタラクティブ &amp; TTY <span class="text-muted">(-i -t)</span>'
    interactive: 'インタラクティブ <span class="text-muted">(-i)</span>'
    terminal: 'TTY <span class="text-muted">(-t)</span>'
    none: None
  autoRestart:
    label: 自動リスタート
    no: しない
    onFailure: '失敗時 <span class="text-muted">(0 でない終了コード)</span>, 再起動し続ける'
    onFailureCondPrefix: 失敗時に
    onFailureCondSuffix: |
      {limit, plural,
      =1 {回}
      other {回}
      }再起動
    always: 常に
  terminationGracePeriodSeconds:
    label: タイムアウトを停止
    helpText: コンテナは、強制的に終了される前に、これだけの時間だけ停止します。
  fsgid:
    label: ファイルシステムグループ
    placeholder: '例: 501'
formContainerLinks:
  title: リンク
  detail: このコンテナと他のコンテナーの関係性を定義します
  addActionLabel: リンクを追加
  name:
    label: 対象コンテナ
  alias:
    label: エイリアス名
    placeholder: '例: database'
  noData: コンテナリンクはありません
  noMatch: 検索条件に一致するリンクがありません
formCount:
  label: 数
formDisks:
  addDiskLabel: ディスクを追加
  addRootDiskLabel: ルートディスクを追加
  name:
    rootDisk: ルートディスク
    label: 名前
    placeholder: '例: data'
  size:
    label: サイズ
    rootDisk: ルートイメージによって決まります
  readIops:
    label: 読み込み IOPS
    placeholder: '例: 1000'
  writeIops:
    label: 書き込み IOPS
    placeholder: '例: 1000'
  driver:
    label: ドライバー
formEngineOpts:
  engineInstallUrl:
    label: Docker インストール URL
    placeholder: '例: http://get.docker.com/'
    recommended: 推奨
    latest: 最新
  engineStorageDriver:
    label: ストレージドライバー
    placeholder: '例: overlay'
  engineOpts:
    label: エンジンオプション
    addActionLabel: エンジンオプションを追加
    keyPlaceholder: '例: log-driver'
    valuePlaceholder: '例: syslog'
  engineLabels:
    label: エンジンラベル
    addActionLabel: エンジンラベルを追加
    keyLabel: ラベル
  engineEnv:
    label: エンジン環境変数
    addActionLabel: 環境変数を追加
    keyLabel: 変数
    keyPlaceholder: '例: HTTP_PROXY'
    valuePlaceholder: '例: http://your-proxy:8080'
  engineInsecureRegistry:
    label: インセキュアレジストリ
    addActionLabel: インセキュアレジストリを追加
    valueLabel: レジストリドメイン
    valuePlaceholder: '例: registry.example.com'
  engineRegistryMirror:
    label: レジストリミラー
    addActionLabel: レジストリミラーを追加
    valueLabel: ミラー URL
    valuePlaceholder: '例: https://my-mirror.example.com:5000'
formEnvVar:
  title: 環境変数
  detail: 作成時に追加された環境変数
  noData: 環境変数はありません
  status: |
    {count, plural,
    =0 {設定されていません}
    =1 {# 変数}
    other {# 変数}
    }
  labels:
    key: キー
    value: 値
formGlobalRoles:
  title: グローバル権限
  description: ユーザーが {appName} 環境全体を管理する際に必要なアクセス権を制御します
  mode:
    admin:
      label: 管理者
      detail: 管理者は、環境全体およびすべてのクラスタ内のすべてのリソースを完全に制御できます
    user:
      label: 一般ユーザー
      detail: 一般ユーザーは、新しいクラスターを作成しアクセスが許可されているクラスターおよびプロジェクトを管理できます
    custom:
      label: カスタム
      detail: ユーザー個別のアクセス許可を選択します
  role:
    create-clusters:
      label: 新しいクラスタの作成
      detail: ユーザーが新しいクラスターを作成し、そのクラスターの所有者になることを許可します。一般ユーザーは、デフォルトでこのアクセス許可を持っています。
    manage-authn:
      label: 認証の設定
      detail: ユーザーがすべての認証プロバイダ設定を有効化、設定、および無効化できるようにします
    manage-catalogs:
      label: カタログの設定
      detail: ユーザーがカタログを追加、編集、および削除できるようにします
    manage-clusters:
      label: 全てのクラスタの管理
      detail: ユーザーがメンバーとして所属していないクラスタを含め、すべてのクラスタを管理できるようにします
    manage-node-drivers:
      label: ノードドライバーの設定
      detail: ユーザーがすべてのノードドライバー設定を有効化、設定、および削除できるようにします
    manage-node-templates:
      label: ノードテンプレートの管理
      detail: ユーザーがノードテンプレートを定義、編集、および削除できるようにします
    manage-roles:
      label: ロールの管理
      detail: ユーザーがロールを定義、編集、および削除できるようにします
    manage-users:
      label: ユーザーの管理
      detail: ユーザーがすべてのユーザーの作成、削除、およびパスワードの設定をできるようにします
    use-catalogs:
      label: カタログの利用
      detail: ユーザーがカタログからテンプレートを表示およびデプロイできるようにします。一般ユーザーはデフォルトでこのアクセス許可を持っています。
    use-node-templates:
      label: ノードテンプレートの利用
      detail: ユーザーが既存のノードテンプレートを使用して新しいノードをデプロイできるようにします
formScopedRoles:
  title: '{type} 権限'
  mode:
    admin:
      label: オーナー
    user:
      label: メンバー
    custom:
      label: カスタム
      detail: このユーザーのロールを選択します。
    role:
      read-only:
        label: 読み取り専用
        detail: すべてを閲覧することができますが、変更は行えません。
formHealthCheck:
  title: ヘルスチェック
  detail: 定期的にコンテナへリクエストを送り、コンテナが生存していて正しく応答するかどうかを確認します。
  readiness: 準備確認
  liveness: ライフチェック
  checkType:
    none: None
  command:
    label: コマンド
    placeholder: '例: cat /tmp/health'
  path:
    label: リクエストパス
    placeholder: '例: /healthcheck'
  httpHeaders:
    keyLabel: ヘッダー名
    keyPlaceholder: '例: ユーザーエージェント'
    valuePlaceholder: '例: ヘルスチェック'
  host:
    label: ホストヘッダー
    placeholder: '例: example.com'
  port:
    placeholder: '例: 80'
  reinitializingTimeout:
    label: 再初期化タイムアウト
  periodSeconds:
    label: チェック間隔
formKeyValue:
  addAction: ペアを追加
  key:
    label: キー
    placeholder: キー
  separator: "="
  value:
    label: 値
    placeholder: 値
  protip: 'ProTip: 簡単に入力するには key=value ペアをペーストしてください。'
formImage:
  label: Docker イメージ
  container:
    placeholder: "例: ubuntu:xenial"
formNameDescription:
  name:
    label: 名前
    placeholder: 名前
  description:
    label: 詳細情報
    placeholder: 詳細情報
    expand: 詳細情報を追加
formNetwork:
  title: ネットワーク
  detail: コンテナに対しネットワークと DNS オプションを設定します
  netMode:
    label: ホストのネットワーク名前空間を使用する
    disable: "いいえ"
    enable: "はい"
  dnsPolicy:
    label: DNS ポリシー
  container:
    label: コンテナ
  requestedIp:
    label: リクエスト IP
    placeholder: 'オプション; 例: 10.42.2.24'
    help: 10.42.0.0/16 ブロックから特定の IP を指定します。既に利用されている場合ランダムな IP が割り当てられます。
  retainIp:
    label: 保有 IP
    reuse: アップグレード時に既存の IP を再利用または置換
  dns:
    label: サービスディスカバリ
    enable: ディスカバリを有効にしてローカルのリゾルバー キャッシュを使用
    disable: ディスカバリを無効にし、直接リモートの名前解決サーバーを使用
  hostname:
    label: ホスト名
    placeholder: '例: web'
    dockerId: Docker コンテナ ID を使う
    hostName: 起動するホストのホスト名を利用する
    containerName: コンテナ名を使う
    custom: 特定のホスト名を設定
  domainName:
    label: ドメイン名
    placeholder: '例: example.com'
  resolvingServers:
    label: DNS サーバー
    addActionLabel: サーバーを追加
    placeholder: '例: 8.8.4.4'
  searchDomains:
    label: サーチドメイン
    placeholder: '例: prod.example.com'
    addActionLabel: ドメインを追加
  subdomain:
    label: サブドメイン
    placeholder: '例: foo'
formPorts:
  header: ポートマッピング
  addAction: ポートを追加
  containerPort:
    placeholder: "例: 8080"
  protocol:
    label: プロトコル
  noPorts: このコンテナにはポートマップがありません
  error:
    privateRequired: 各ポートルールにはプライベートコンテナ ポートが必要になります。
    mixedIpPort: "ポート {ip}:{port}/{proto} は、1 つ以上のマッピングを保持しています。"
    mixedPort: "ポート {port}/{proto} は、1 つ以上のマッピングを保持しています。"
formScheduling:
  title: ノード スケジューリング
  detail: ポッドがどのノード上でデプロイされるかを設定します。
  status: |
    {count, plural,
    =0 {ルールはありません}
    =1 {# ルール}
    other {# ルール}
    }
  canRequestHost:
    vm: <b>すべて</b> の仮想マシンを特定のノード上で起動する
  runSpecific: 特定のノードでこのポッドを実行する
  noRules: ルールはありません。
  autoRun: "スケジューリングルールにマッチした全てのノード上で自動的に起動:"
  autoPick:
    vm: "全ての仮想マシンに対しスケジューリングルールにマッチしたノードを自動的に選択:"
    container: "全てのポッドに対しスケジューリングルールにマッチしたノードを自動的に選択:"
    host: "スケジューリングルールにマッチしたノードを自動的に選択:"
  addRule: ルールを追加
  addCustom: カスタムルールを追加
  condition: 条件
  field: フィールド
  key: ラベルキー
  value: 値
  operator: オペレーター
  effect: 効果
  toleration:
    title: トレランス
    add: トレランスを追加
  scaling:
    minMaxDetail: 設定することでユーザー操作や API 呼び出しによるスケーリング時に制限を設けられます
    incrementDetail: 設定することでスケール時に複数台ずつ増加されます
    hostMaxDetail: 設定されている場合は、このサービスのコンテナをこのほすとの最大数にスケジュールします。
  scaleMin: 最小スケール
  scaleMax: 最大スケール
  scaleIncrement: 増加数
  hostMax: 最大ノード数
  priority:
    label: 優先度
    placeholder: '例: 3'
  priorityClassName:
    label: 優先クラス名
    placeholder: '例: 高い'
  scheduler:
    label: スケジューラー
    placeholder: '例: 私のスケジューラー'
  nodeSelector:
    operator:
      lt: '<'
      le: |
        &le;
      eq: '='
      ne: |
        &ne;
      gt: '>'
      ge: |
        &ge;
    multiple:
      placeholder: '例: foo, bar, baz'
    custom:
      placeholder: '例: foo > 42 && bar != baz'
formSecurity:
  title: セキュリティ & ホスト設定
  detail: 動作するホスト上でのコンテナのリソース保証または制限を設定します
  pullImage:
    label: イメージの取得
  privileged:
    label: 特権モード
    disable: "いいえ"
    enable: "はい: コンテナはホストに対してフルアクセス権限を持ちます"
  allowPrivilegeEscalation:
    label: 権限昇格
    disable: "いいえ"
    enable: "はい: コンテナは親プロセスよりも多くの権限を取得できます"
  runAsNonRoot:
    disable: "いいえ"
    enable: "はい: コンテナは非rootのユーザーとして実行する必要があります"
  readOnlyRootFilesystem:
    disable: "いいえ"
    enable: "はい: コンテナは読み取り専用のルートファイルシステムを持ちます"
  memoryLimit:
    set: 制限値
  cpuLimit:
    set: 制限
  swapLimit:
    label: メモリスワップ
    unlimited: 無制限
    set: 制限値
    default: 物理制限値の 2 倍に制限
    none: スワップを許可しない
  swappiness:
    label: スワップ値
    default: ホストのデフォルトを使用する
    none: 最小
    set: カスタム (1-100)
  cpuPinning:
    label: CPU ピンニング
    placeholder: "例: 0,1,3; デフォルト: All"
  shares:
    label: CPU シェア
    placeholder: '例: 1024'
  capabilities:
    add: 追加ケーパビリティ
    drop: ドロップケーパビリティ
    helpBlock:
      text: ケーパビリティはコンテナ上で利用可能なスーパーユーザー権限で提供されるコントロール制御です
      link: 詳細を見る
  deviceBinding:
    label: デバイスバインディング
    addActionLabel: バインディングを追加
    pathHost:
      label: ホスト上のパス
      placeholder: '例: /dev/sdc'
    pathContainer:
      label: コンテナ上のパス
      placeholder: '例: /dev/xsdc'
    permissions:
      label: 権限
  memoryReservation:
    label: メモリ予約
  milliCpuReservation:
    label: CPU 予約
    unit: ミリ CPUs
  isolation:
    label: 分離
    default: デフォルト(コンテナ)
    hyperv: HyperV (VM)
formSslTermination:
  title: SSL/TLS 証明書
  detail: 暗号化されたポートへのリクエストに対し提示される証明書を設定します
  defaultCertificate:
    prompt: 証明書を選択してください...
  alternateCertificate:
    prompt: 証明書を選択してください...
  certificate: 証明書
  alternateCerts: 代替証明書
  addAlternate: 代替証明書を追加
  noCertificates: 利用可能な証明書はありません
  noCertificatesConfiged: 証明書はありません。
  noAlternateCertificates: 他の利用可能な証明書はありません。
  host:
    label: ホスト
    placeholder: '例: example.com'
  helpBlock: |
    "注: いくつかの古い SSL/TLS クライアントは <a href="https://en.wikipedia.org/wiki/Server_Name_Indication" target="_blank">Server Name Indication (SNI)</a> をサポートしていません。これらのクライアントでは常にメイン証明書の提示を求められますが、比較的新しいクライアントでは一致するものが見つかると代替証明書のリストから適切な証明書を求めてきます。"
  notNeeded: 有効なターゲットルールで構成された SSL/TLS リッスンポートはありません
  removeCertLabel: この証明書を削除する
  addCertLabel: 証明書を追加
formNamespace:
  label:
    reuse: 名前空間
    create: 名前空間
  toggle:
    simple: カスタマイズ
    reuse: 既存の名前空間を使用する
    create: 新しい名前空間を追加
  reuse:
    prompt: 名前空間を選択してください...
  create:
    placeholder: '例: 私のアプリ'
  errors:
    noneChosen: 名前空間を選択する必要があります
    validation: "名前空間: {error}"
formUserData:
  placeholder: "e.g. コンテナ用設定情報"
  isVmPlaceholder: "e.g. 仮想マシン用設定情報"
formUserLabels:
  title: ラベル
  detail: ラベルはコンテナに注釈を付与しスケジューリングの決定に利用されるキー/値のペアです
  addAction: ラベルを追加
  key:
    label: キー
    placeholder: '例: foo'
  separator: "="
  value:
    label: 値
    placeholder: '例: bar'
  protip: "ProTip: 簡単に入力するには1行以上の key=value ペアをペースト>してください。"
formAnnotations:
  title: アノテーション
  detail: コンテナのアノテーション(キー/値メタデータ) を設定します。
  errors:
    invalidJSON: アノテーションのJSONフォーマットが無効です。
    topLevelValueInvalid: アノテーションJSONのトップレベル値はオブジェクトでなければなりません。
formValueArray:
  addActionLabel: 値を追加
  valueLabel: 値
  valuePlaceholder: 値
  protip: "ProTip: 簡単に入力するには1行以上の値をペーストしてください。"
formVolumeRow:
  mode:
    tmpfs: Tmpfs
formVolumes:
  title: ボリューム
  detail: 個々のコンテナのライフサイクルから分離され、永続化やデータ共有に利用されます
  value:
    prompt: コンテナを選択してください...
  volumes: ボリューム
  volumesFrom: 他コンテナのボリューム
  volumeDriver:
    label: カスタムボリューム用のドライバ
    placeholder: '例: rancher-nfs; デフォルト: local'
    suggestion: '使用中のボリュームドライバー:'
  noLaunchConfigs: このサービスにはボリュームを共有するための起動設定がありません。
  noHostContainers: このホストには他コンテナのボリュームを利用するためのコンテナがありません。
  onlySingleHost: 特定ホストにコンテナを追加した場合のみ利用できます
  errors:
    incomplete: 不完全なボリューム定義
    absoluteMountPoint: ボリュームマウントポイントは絶対パスでなければなりません
  add:
    label: ボリュームを追加...
    tmpfs: インメモリtmpfsを追加
  table:
    kind: 種類
    source: ソース
    mountPoint: マウントポイント
    opts: アクセス/オプション
formCapabilityPodSecurityPolicy:
  title: ケーパビリティポリシー
  detail: ケーパビリティポリシーに関する設定です
  capabilities:
    allow: 許可されたケーパビリティ
    add: デフォルトで追加されるケーパビリティ
    drop: ドロップされるべきケーパビリティ
formVolumePodSecurityPolicy:
  title: ボリュームポリシー
  detail: 利用可能なボリュームタイプを制御します
  volumes: ボリューム
formAllowedHostPathsPodSecurityPolicy:
  title: 許可されたホストパスポリシー
  detail: 許可されたホストパスのホワイトリストです
  path:
    addLabel: パスプリフィックスを追加
    placeholder: '例: /foo'
formFsGroupPodSecurityPolicy:
  title: FS グループポリシー
  detail: ポッドのボリュームを所有する FS グループを割り当てます
  rule:
    mustRunAs: MustRunAs  - 少なくとも1つの範囲を指定する必要があります。最初の範囲の最小値をデフォルト値として使用します。最初の範囲の最初のIDに対して検証します。
    runAsAny: RunAsAny  - デフォルトはありません。任意の fsGroup ID を指定できます。
  range:
    addLabel: 範囲を追加
    max:
      label: 最大
      placeholder: '例: 6'
    min:
      label: 最小
      placeholder: '例: 1'
formHostPortsPodSecurityPolicy:
  title: ホストポートポリシー
  detail: 使用するホストポートを設定します
  port:
    addLabel: ポート範囲を追加
    max:
      label: 最大
      placeholder: '例: 7000'
    min:
      label: 最小
      placeholder: '例: 6000'
formRunAsUserPodSecurityPolicy:
  title: ユーザー実行ポリシー
  detail: ユーザーID
  rule:
    mustRunAs: MustRunAs - 少なくとも1つの範囲を設定する必要があります。範囲の最初の値をデフォルト値として使用します。検証は設定された範囲に対して行われます。
    mustRunAsNonRoot: MustRunAsNonRoot - ポッドにrunAsUserが0以外で提出されるか、USERディレクティブがイメージ内で定義されている必要があります。デフォルトは提供されていません。
    runAsAny: RunAsAny - デフォルトはありません。任意の runAsUser を指定できます。
  range:
    addLabel: 範囲を追加
    max:
      label: 最大
      placeholder: '例: 6'
    min:
      label: 最小
      placeholder: '例: 1'
formSeLinuxodSecurityPolicy:
  title: SELinux ポリシー
  detail: コンテナに対する SELinux コンテキストを設定します
  rule:
    mustRunAs: MustRunAs - デフォルトとしてseLinuxOptionsを使用します。検証は seLinuxOptions に対して行います。
    runAsAny: RunAsAny - 任意の seLinuxOptions を指定できるようにする
  level:
    label: レベル
    placeholder: '例: level'
  role:
    label: ロール
    placeholder: '例: role'
  user:
    label: ユーザー
    placeholder: '例: user'
formSupplementalGroupsPodSecurityPolicy:
  title: 補足のグループポリシー
  detail: 許容される補足的なグループポリシーを設定します
  rule:
    mustRunAs: MustRunAs - 少なくとも1つの範囲を指定する必要があります。最初の範囲の最小値をデフォルト値として使用します。すべての範囲のIDに対して検証します。
    runAsAny: RunAsAny - デフォルトはありません。任意の supplementalGroups を指定できます。
  range:
    addLabel: 範囲を追加
    max:
      label: 最大
      placeholder: '例: 6'
    min:
      label: 最小
      placeholder: '例: 1'
formBasicPodSecurityPolicy:
  title: 基本ポリシー
  detail: 基本的なポッドセキュリティポリシーに関する設定です
  allowPrivilegeEscalation:
    label: 権限昇格を許可する
    enable: "はい: コンテナの実行時に親からの権限昇格を許可します"
  defaultAllowPrivilegeEscalation:
    label: デフォルトの権限昇格を許可する
    enable: "はい: プロセスが親プロセスより多くの権限を取得できるかどうかを制御します"
  hostIPC:
    label: ホスト IPC
    enable: "はい: ホストの IPC 名前空間を使用します"
  hostNetwork:
    label: ホストネットワーク
    enable: "はい: ホストネットワーキングを使用します"
  hostPID:
    label: ホスト PID
    enable: "はい: ホストの PID 名前空間を使用します"
  privileged:
    label: 特権モード
    enable: "はい: 特権付きコンテナを実行します"
  readOnlyRootFilesystem:
    label: 読み取り専用ルートファイルシステム
    enable: "はい：読み取り専用のルートファイルシステムを使用する必要があります"
hostSettings:
  header: ホスト登録 URL
  subtext: '{appName} API に接続するための URL は何にしますか?'
  hostUrl:
    local: "サイトのアドレス:"
    new:
      labelText: "それ以外:"
      placeholder: "例: http://example.com:8080"
  helpText:
    static1: "<code>/v1</code> などのパスは含めないで下さい。もし、"
    static2: "を {appName} の前段で行う場合は <code>https://</code> を指定することに注意してください。"
    isRancher: '<a href="{docsBase}/installing-rancher/installing-server/basic-ssl-config/" target="_blank">SSL 終端処理</a>'
    sslTerm: SSL 終端処理
  notPublic:
    alert: |
      作成された全てのホストは<code>{activeValue}</code>にアクセスできますか?<br/>プライベート IP や ローカルネットワークに見受けられます。
  badTld:
    alert: |
      トップレベルドメインである <code>.local</code> はRFC6742 でマルチキャスト DNS 向けに予約されています。そのため登録 URL に利用することは推奨されず、利用した場合 DNS 上の問題が発生する可能性があります。他のホスト名または IP を指定してください。
hostPod:
  supportState:
    unsupported: サポートされていない Docker バージョン
    untested: 未テストの Docker バージョン
  groupedInstances:
    namespace: '名前空間:'
    stack: 'スタック:'
    standalone: 独立型コンテナ
identityBlock:
  loading: 読込中...
infoMultiStats:
  connecting: 接続中...
  utilizationStats: 利用率の統計はアクティブ/起動中の場合のみ利用できます。
  cpuSection:
    labelText: CPU
    system: システム
    user: ユーザー
  networkSection:
    labelText: ネットワーク
    transmit: 送信
    receive: 受信
  memorySection:
    labelText: メモリ
    used: 使用済み
  storageSection:
    labelText: ストレージ
    read: 読み込み
    write: 書き込み
inputAnswers:
  config: 設定オプション
  unknownType: "有効でないパラメータータイプ:"
  noConfig: このテンプレートには設定オプションがありません
inputIdentity:
  placeholder:
    github: GitHub ユーザーまたは組織名を追加
    generic: ユーザーまたはグループ名を追加
  dropdownLabel:
    teams: あなたのチームと組織
    groups: あなたのグループ
inputPassword:
  buttonText: 生成
inputTextFile:
  tooltip: ファイルから読み込む
labelsSection:
  kind: 種類
  title: ラベル
  status: |
    {count, plural,
    =0 {ラベルはありません}
    =1 {# ラベル}
    other {# ラベル}
    }
  key: キー
  value: 値
  noData: ラベルはありません
loginUserPass:
  userLabel: ユーザー名
  caasLabel: E メールアドレス
  userPlaceholder: '例: jsmith'
  loggingInLabel: ログイン中...
  passwordLabel: パスワード
machineTemplatesPage:
  title: ノードを追加
  new:
    btn: 設定
  templateBox:
    labels:
      region: リージョン
      zone: ゾーン
newCertificate:
  title:
    new: 証明書を追加
    edit: '証明書を編集: {name}'
    view: '証明書: {name}'
  key:
    label: プライベートキー
    placeholder: "-----BEGIN RSA PRIVATE KEY----- から始まるプライベートキーを張り付けてください"
  cert:
    label: 証明書
    placeholder: "-----BEGIN CERTIFICATE----- から始まる証明書と任意の必要な証明書チェーンを貼り付けてください"
    protip: 必要な証明書チェーンを含めてください。
  certChain:
    label: 証明書チェーン
    placeholder: "-----BEGIN CERTIFICATE----- から始まる追加の証明書チェーンを張り付けてください（オプション）"
  metaXML:
    label: メタデータ XML
    placeholder: "IDPメタデータXMLを貼り付けてください"
modalAboutComponent:
  component: コンポーネント
  version: バージョン
  cattle: Cattle
  cli: CLI
  ui: User Interface
modalAddPayment:
  header: 新しい支払い方法を追加
  save: 保存
  errors:
    cc: 無効なクレジットカード番号です
    exp: 無効な有効期限です
    cvc: 無効な CVC 番号です
    street: 番地情報が必要です
    city: 市区町村情報が必要です
    state: 州情報が必要です
    zip: 郵便番号が必要です
  form:
    currency:
      label: 支払い通貨を選んでください
    cc:
      label: クレジットカード番号
      placeholder: '•••• •••• •••• ••••'
    default:
      label: デフォルトカード
    name:
      label: クレジットカード記載名
      placeholder: 'Taro Yamada'
    exp:
      label: 有効期限
      placeholder: '••/••'
    cvc:
      label: CVC
      placeholder: '•••'
    address:
      addressLine1:
        label: 番地
        placeholder: 742 Evergreen Terrace
      addressLine2:
        label: ビル・建物名
        placeholder: Apt. 123
      city:
        label: 市区町村
        placeholder: Springfield
      state:
        label: 州
        placeholder: または
      zip:
        label: 郵便番号
        placeholder: '99999'
      country:
        label: 国名
        placeholder: アメリカ合衆国
  currencies:
    yuan: "中国元 (¥)"
    euro: "ユーロ (€)"
    dollar: "US ドル($)"
modalContainerStop:
  header: "本当に停止してもよろしいですか?"
  helpText: "タイムアウト時間内に停止しない場合、コンテナは強制終了されます"
  protip: "ProTip: この確認画面を飛ばす場合は停止ボタンのクリック時に {key} キーを長押ししてください。"
  label: タイムアウト
  button: 停止
modalConfirmDeactivate:
  header: 本当にこの処理を行ってよろしいですか?
  protip: "ProTip: この確認画面を飛ばす場合は {isServiceButton} クリック時に {key} キーを長押ししてください。"
  cancel: キャンセル
  buttons:
    project:
      message: 環境を非アクティブ化
      button: 非アクティブ化
    environment:
      message: 次のサービスを停止
      button: サービスを停止
    default:
      message: 非アクティブ化
      button: 非アクティブ化
modalConfirmRemovePayment:
  header: '支払いの削除の確認'
  title: '本当に削除してもよろしいですか?'
modalEditDriver:
  header:
    create: ノードドライバーを追加
    edit: ノードドライバーの編集
  url:
    label: ダウンロード URL
    help: 64-bit Linux のマシンドライバーをダウンロードする URL 。
  uiUrl:
    label: カスタム UI URL
    help: "オプション: このドライバー向けにカスタマイズされたノード追加画面を読み込むための URL です。"
    link: 詳細は <a href="https://github.com/rancher/ui-driver-skel" target="_blank">ui-driver-skel</a> を参照してください。
  checksum:
    label: チェックサム
    help: "オプション: 期待されたチェックサムかどうかダウンロードされたマシンドライバーの整合性を確認します。"
modalEditSetting:
  title: 拡張設定を編集
  name:
    label: 名前
  value:
    label: 値
  reset:
    label: ディフォルトにリセット
modalEditPassword:
  current: 現在のパスワード
  new: 新しいパスワード
  confirm: 新しいパスワード(確認用)
  mismatch: パスワードが一致しません
modalFeedback:
  header: '{appName} へようこそ!'
  subtitle: "開始する前にあなたのことについて少し教えてください..."
  send: はじめに
modalHostEvacuate:
  header: "本当に退避してもよろしいですか?"
  helpText: "この操作はホストを非アクティブ化しインフラストラクチャ コンテナ以外の全ての起動中コンテナを削除します。"
  protip: "この確認画面を飛ばす場合は退避ボタンのクリック時に {key} キーを長押ししてください。"
  button: 退避
modalProcessError:
  header: 例外情報
  cause: "理由:"
  stackTrace: "スタックトレース:"
  close: 閉じる
modalRollbackService:
  title: '"{instanceName}" をロールバック'
  action: ロールバック
  current:
    label: 現在のリビジョン
  revisionId:
    label: リビジョンへのロールバック
    prompt: リビジョンを選択してください...
modalShortcuts:
  title:
    rancher: "ワープゾーンへようこそ!"
    pl: キーボードショートカット
  other: その他の項目
modalWelcome:
  header: '{appName} へようこそ!'
  closeModal: 完了!
namespaceGroup:
  label: "名前空間: {name}"
newIngress:
  header:
    add: イングレスを追加
    edit: イングレスを編集
  error:
    noRules: "１つ以上のルールが必要です。"
newBalancer:
  header:
    add: ロードバランサーを追加
    edit: ロードバランサーを編集
    upgrade: ロードバランサーをアップグレード
  error:
    noRules: "1つ以上のリスニングポートとターゲットルールが必要です。"
    noSourcePort: "各ルールにはソースポートが必要です"
    invalidSourcePort: "無効なソースポート: '{num}'"
    invalidTargetPort: "無効な対象ポート: '{num}'"
    mixedPort: "ポート {num} はアクセスするプロトコルが競合する複数のルールを持っています"
    noTarget: "各ルールには対象が必要です"
    noTargetPort: "各ルールにはターゲットポートが必要です"
    needsCertificate: "SSL/TLS ポートルールであるため証明書が必要です"
    stackName: "新しいスタックには名前が必要です"
newCatalog:
  catalog: "カタログ:"
  category: "カテゴリー:"
  config: 設定オプション
  license: "ライセンス:"
  maintainedBy: コミュニティメンバーによるメンテナンス
  maintainer: "メンテナー:"
  newNamespace: 新しい名前空間
  noConfig: このテンプレートには設定オプションがありません
  official: 公式に認証済み
  preview: プレビュー
  saveConfigure: 設定
  saveNew: 起動
  saveUpgrade: アップグレード
  selectVersionAdd: デプロイするテンプレートのバージョンを選択してください
  selectVersionConfigure: 設定するテンプレートのバージョンを選択してください
  selectVersionUpgrade: アップグレードするテンプレートのバージョンを選択してください
  startService: 作成後にサービスを起動
  support: "サポート:"
  templateVersion: テンプレートバージョン
  txt: answers.txt
  unknownType: "有効でないパラメータータイプ:"
  upgrade: "アップグレード:"
  url: "プロジェクト URL:"
  version:
    prompt: バージョンを選択してください...
newContainer:
  upgrade:
    container: コンテナをアップグレード
    service: サービスをアップグレード
    globalService: グローバルサービスをアップグレード
  selectUpgrade: アップグレードするサービスを1つ以上選択してください
  saveUpgrade: アップグレード
  saveNew: 起動
  name:
    placeholder: '例: myapp'
  description:
    placeholder: '例: マイアプリケーション'
  environment:
    label: 環境変数
    addAction: 環境変数を追加
    keyLabel: 変数
    keyPlaceholder: '例: FOO'
    valueLabel: 値
    valuePlaceholder: '例: bar'
  sidekick:
    header: サービスをアップグレード
    title: アップグレードするサービス起動設定の選択
    primary: 基本サービス
newPassword:
  placeholder: 新しいパスワード
  password: 新しいパスワード
  confirmPassword: 新しいパスワード(確認用)
  passwordNoMatch: パスワードが一致しません
newSecret:
  title:
    new: シークレットを追加
    edit: 'シークレットを編集: {name}'
    view: 'シークレット: {name}'
  name:
    placeholder: '例: api-key'
  description:
    placeholder: e.g. S3 key pair
  values:
    label: シークレットの値
  addActionLabel: シークレットの値を追加
optionallyNamespaced:
  scope:
    label: スコープ
    project: このプロジェクトのすべての名前空間で使用可能
    namespace: 単一の名前空間で利用可能
orchestrationWelcome:
  simple:
    title: シンプル
  enhanced:
    title: Kubernetesによる強化
pageFooter:
  notARelease: (未リリース)
  help: 'ヘルプ & ドキュメント'
  issues: バグを報告
  forums: フォーラム
  slack: Slack
  download:
    link: CLI をダウンロード
    mac: macOS
    windows: Windows
    linux: Linux
  showSystem: システムコンテナを表示
pagination:
  catalog: |
    {pages, plural,
    =0 {カタログはありません}
    =1 {{count} {count, plural, =1 {カタログ} other {カタログ}}}
    other {{from} - {to} of {count} Catalogs}}
  certificate: |
    {pages, plural,
    =0 {証明書はありません}
    =1 {{count} {count, plural, =1 {証明書} other {証明書}}}
    other {{from} - {to} of {count} Certificates}}
  container: |
    {pages, plural,
    =0 {クラスターはありません}
    =1 {{count} {count, plural, =1 {クラスター} other {クラスター}}}
    other {{from} - {to} of {count} Clusters}}
  cluster: |
    {pages, plural,
    =0 {クラスターはありません}
    =1 {{count} {count, plural, =1 {クラスター} other {クラスター}}}
    other {{from} - {to} of {count} Clusters}}
  dnsRecord: |
    {pages, plural,
    =0 {DNS レコードはありません}
    =1 {{count} {count, plural, =1 {DNS レコード} other {DNS レコード}}}
    other {{from} - {to} 個の {count} DNS レコード}}
  driver: |
    {pages, plural,
    =0 {ドライバーはありません}
    =1 {{count} {count, plural, =1 {ドライバー} other {ドライバー}}}
    other {{from} - {to} of {count} Drivers}}
  driverOptions: |
    {pages, plural,
    =0 {オプションはありません}
    =1 {{count} {count, plural, =1 {ドライバーオプション} other {ドライバーオプション}}}
    other {{from} - {to} of {count} Driver Options}}
  entry: |
    {pages, plural,
    =0 {エントリーはありません}
    =1 {{count} {count, plural, =1 {エントリー} other {エントリー}}}
    other {{from} - {to} of {count} Entries}}
  event: |
    {pages, plural,
    =0 {イベントはありません}
    =1 {{count} {count, plural, =1 {イベント} other {イベント}}}
    other {{from} - {to} of {count} Events}}
  generic: |
    {pages, plural,
    =0 {項目はありません}
    =1 {{count} {count, plural, =1 {項目} other {項目}}}
    other {{from} - {to} of {count} Items}}
  image: |
    {pages, plural,
    =0 {イメージはありません}
    =1 {{count} {count, plural, =1 {イメージ} other {イメージ}}}
    other {{from} - {to} of {count} Images}}
  link: |
    {pages, plural,
    =0 {リンクはありません}
    =1 {{count} {count, plural, =1 {リンク} other {リンク}}}
    other {{from} - {to} of {count} Links}}
  loadBalancer: |
    {pages, plural,
    =0 {ロードバランサーはありません}
    =1 {{count} {count, plural, =1 {ロードバランサー} other {ロードバランサー}}}
    other {{from} - {to} of {count} Load Balancers}}
  ingress: |
    {pages, plural,
    =0 {イングレスはありません}
    =1 {{count} {count, plural, =1 {イングレス} other {イングレス}}}
    other {{from} - {to} of {count} Ingresses}}
  member: |
    {pages, plural,
    =0 {メンバーはいません}
    =1 {{count} {count, plural, =1 {メンバー} other {メンバー}}}
    other {{from} - {to} of {count} Members}}
  mount: |
    {pages, plural,
    =0 {マウントはありません}
    =1 {{count} {count, plural, =1 {マウント} other {マウント}}}
    other {{from} - {to} of {count} Mounts}}
  namespace: |
    {pages, plural,
    =0 {名前空間はありません}
    =1 {{count} {count, plural, =1 {名前空間} other {名前空間}}}
    other {{from} - {to} of {count} Namespaces}}
  node: |
    {pages, plural,
    =0 {ノードはありません}
    =1 {{count} {count, plural, =1 {ノード} other {ノード}}}
    other {{from} - {to} of {count} Nodes}}
  pod: |
    {pages, plural,
    =0 {ポッドはありません}
    =1 {{count} {count, plural, =1 {ポッド} other {ポッド}}}
    other {{from} - {to} of {count} Pods}}
  port: |
    {pages, plural,
    =0 {ポートはありません}
    =1 {{count} {count, plural, =1 {ポート} other {ポート}}}
    other {{from} - {to} of {count} Ports}}
  project: |
    {pages, plural,
    =0 {プロジェクトはありません}
    =1 {{count} {count, plural, =1 {プロジェクト} other {プロジェクト}}}
    other {{from} - {to} of {count} Projects}}
  rule: |
    {pages, plural,
    =0 {ルールはありません}
    =1 {{count} {count, plural, =1 {ルール} other {ルール}}}
    other {{from} - {to} of {count} Rules}}
  service: |
    {pages, plural,
    =0 {サービスはありません}
    =1 {{count} {count, plural, =1 {サービス} other {サービス}}}
    other {{from} - {to} of {count} Services}}
  volume: |
    {pages, plural,
    =0 {ボリュームはありません}
    =1 {{count} {count, plural, =1 {ボリューム} other {ボリューム}}}
    other {{from} - {to} of {count} Volumes}}
  workload: |
    {pages, plural,
    =0 {ワークロードはありません}
    =1 {{count} {count, plural, =1 {ワークロード} other {ワークロード}}}
    other {{from} - {to} of {count} Workloads}}
projectRow:
  none: 詳細情報はありません
  orchestration: オーケストレーション
publicEndpoints:
  endpoint: エンドポイント
  bindIpAddress: バインド IP
  publicPort: パブリックポート
  target: 対象
  privatePort: コンテナポート
  noData: 公開されているポートはありません
  noMatch: 検索条件に一致するポートはありません
physicalStats:
  title: 物理マシン属性
  detail: 物理マシンの属性情報です
registryRow:
  address: アドレス
  username: ユーザー名
  created: 作成日
reservationParameters:
  label: リソース制限
  memory:
    labelText: 'メモリ'
    placeholder: 'デフォルト: 全ホスト'
    unit: 'MB'
  milliCpu:
    labelText: CPU
    placeholder: 'デフォルト: 全ホスト'
    unit: 'mCPU'
saveCancel:
  saving: 保存中...
  saved: 完了!
  edit: 保存
  create: 作成
  cancel: キャンセル
schema:
  inputBoolean:
    y: "はい"
    n: "いいえ"
  inputCertificate:
    prompt: 証明書を選択してください...
  inputContainer:
    prompt: コンテナを選択してください...
  inputEnum:
    option: オプションを選択してください...
  inputHost:
    label: ホストを選択してください...
  inputService:
    custom: カスタム
  inputSecret:
    prompt: シークレットを選択してください...
schedulingRuleRow:
  theHost: ホスト
  must: must
  should: should
  shouldNot: should not
  mustNot: must not
  haveA: have a
  of: of
  hostLabel: ホストラベル
  containerLabel: ラベル付きコンテナ
  serviceName: 名前付きサービス
  containerName: 名前付きコンテナ
siteAccess:
  header: サイトアクセス
  helpText: "誰がログインし {appName} を利用できるか設定してください"
  unrestricted: "全ての有効な {individuals} を許可"
  required: "認証済み {individuals} と {collection} のみに制限"
  listHeader: "認証済み {individuals} と {collection}"
  noIdentity: None
  users: ユーザー
  groups: グループ
  organizations: 組織
systemInfoSection:
  title: システム情報
  detail: システムとkubernetesの情報。
  key: キー
  value: 値
  noData: データがありません
  arch: アーキテクチャー
  dockerVersion: Dockerバージョン
  kernelVersion: カーネルバージョン
  kubeletVersion: Kubeletバージョン
  kubeProxyVersion: Kube Proky バージョン
  operatingSystem: オペレーティングシステムイメージ
  osType: オペレーティングシステム
  noMatch: 検索条件に一致するシステム情報がありません
tableCountSelect:
  header: ページ毎のテーブル行数
telemetryOpt:
  header: 統計情報
  subtext: |
    Rancher Labs では {appName} のインストール構成に関する匿名の情報を収集したいと思います<br/>。特定のリソース名、IP アドレス、その他識別情報などは収集されません<br/>。収集された情報はどのようにユーザーが Rancher を利用しているかを理解し、将来の開発における優先度を決めるために利用されます。
  learnMore:
    label: 詳細を見る
  label: 匿名の統計情報の収集を許可する
tooltipLink:
  list: リスト
  composeYaml: Compose YAML
tooltipWarning:
  notConfigured: アクセスコントロールは設定されていません
  dismiss: 表示しない
upgradeBtn:
  version:
    current: '現行'
  status:
    loading: 'アップグレードを確認中...'
    current: '最新'
    available: 'アップグレードが利用できます'
    inprogress: 'アップグレード中です'
    upgraded: 'アップグレード完了: アップグレードが終了しました'
    notfound: 'テンプレートバージョンが見つかりません'
    error: 'アップグレードのチェックに失敗しました'
    required: 'アップグレードが必要です'
jsonEditor:
  placeholder: "JSON形式で入力してください"
viewEditDescription:
  form:
    name:
      placeholder: '例: ラボ'
    description:
      placeholder: e.g. 開発者向けテスト用環境
vmConsole:
  header: "コンソール:"
  protip: "ProTip: 新しいウィンドウで起動する場合はシェルアクセスを開く際に {key} を長押ししてください。"
  canvas: キャンバスがサポートされていません。
  footerActions:
    buttonSend: Ctrl-Alt-Delete を送る
    buttonCancel: 閉じる
volumeRow:
  mounts:
    readOnly: "(読み取り専用)"
waitKubernetes:
  addHost: '1台のホストを追加しています'
  activateHost: 'ホストがアクティブになるのを待っています'
  createStack: 'Kubernetes のシステムスタックを作成中'
  startServices: 'サービスを起動中'
  waitApi: 'Kubernetes API を待っています'
searchableSelect:
  noMatch: 該当なし
  noOptions: 利用可能なオプションはありません。
containerChoices:
  hostGroup: "ホスト: {name}"
  hostGroupWithState: "ホスト: {name} ({state})"
  unknownHost: "ホスト: ???"
  containerOption: "{name}"
allWorkloads:
  namespace: "名前空間: {name}"
nav:
  srToggleDropdown: ドロップダウンを切り替え
  environment:
    cluster: クラスター
    label: 環境
    all: 全ての環境
    your: あなたの環境
    selected: 選択された環境
    edit: '"{name}" を編集'
  cluster:
    nodes: ノード
    namespaces: 名前空間
  containers:
    tab: ワークロード
    systemTab: システム
    containers: ワークロード
    volumes: ボリューム
    deploy: デプロイ
    addContainer: コンテナを追加
    addBalancer: バランサーを追加
    addIngress: イングレスを追加
    addDns: レコードを追加
    addVolume: ボリュームを追加
  group:
    none: フラットリスト
    workload: ワークロードによるグループ化
    namespace: 名前空間によるグループ化
    namespaceWorkload: 名前空間/ワークロードによるグループ化
  hosts:
    tab: ノード
    addHost: ノードを追加
  catalog:
    all: 全て
    library: ライブラリ
    community: コミュニティ
  apps:
    tab: カタログアプリ
    apps: カタログアプリ
    launch: 起動
  infra:
    tab: リソース
    storagePage: ストレージ
    certificates: 証明書
    registries: レジストリ
    secrets: シークレット
  admin:
    tab: グローバル
    accounts: ユーザー
    clusters: クラスター
    machines: ノード
    catalogs: カタログ
    security:
      tab: セキュリティ
      roles: ロール
      members: メンバー
      podSecurityPolicies: ポッドセキュリティポリシー
      authentication: 認証
    settings:
      tab: 設定
      auth: アクセスコントロール
      registration: ホスト登録
      advanced: 詳細
  user:
    label: "ユーザーメニュー: {username}"
    logout: ログアウト
  userPreferences:
    link: "アカウント設定"
action:
  activate: アクティブ化
  clone: クローン
  console: コンソールを開く
  convertToService: サービスに変換
  deactivate: 非アクティブ化
  edit: 編集
  editService: サービスを編集
  evacuate: 退避
  execute: シェルを実行
  exportConfig: 設定をエクスポート
  garbageCollect: クリーンアップ
  logs: ログを見る
  move: 移動
  pauseAll: 全て一時停止
  remove: 削除
  replay: 再実行
  restart: 再起動
  retry: リトライ
  rollback: ロールバック
  setDefault: ログイン環境として設定する
  start: 開始
  startAll: すべて開始
  stop: 停止
  stopAll: すべて停止
  upgrade: アップグレード
  upgradeOrEdit: アップグレード/編集
  viewConfig: 設定を見る
  viewGraph: グラフを見る
  viewInApi: API を見る
  viewInstance: インスタンスを見る
validation:
  required: '"{key}" が必要です'
  arrayLength:
    exactly: '"{key}" には {count, plural, =1 {# 項目} other {# 項目}} を含める必要があります'
    between: '"{key}" には {min} から {max} {max, plural, =1 {個} other {個}}の項目を含める必要があります。'
    min: '"{key}" には少なくとも {count} {count,plural,=1 {個} other {個}}の項目を含める必要があります。'
    max: '"{key}" に含まれる項目は {count} {count,plural,=1 {個} other {個}}以下である必要があります。'
  stringLength:
    exactly: '"{key}" は  {count,plural,=1 {# 文字} other {# 文字}}である必要があります。'
    between: '"{key}" の文字数は {min} 文字から {max} {max,plural,=1 {文字} other {文字}}である必要があります。'
    min: '"{key}" には少なくとも {count} {count,plural,=1 {文字} other {文字}}を含める必要があります。'
    max: '"{key}" は {count} {count,plural,=1 {文字} other {文字}}以下である必要があります。'
  number:
    exactly: '"{key}" はちょうど {val} である必要があります。'
    between: '"{key}" は {min} から {max} の間である必要があります。'
    min: '"{key}" は少なくとも {val} である必要があります。'
    max: '"{key}" は {val} 以下である必要があります。'
  chars: '"{key}" には {count, plural,=1 {# 個} other {# 個}} の不正な文字が含まれています: {chars}'
  dns:
    doubleHyphen: 2つの連続したハイフンを含むことはできません。
    hostname:
      startDot: '"{key}" をドットで始めることはできません。'
      empty: '"{key}"は少なくとも1文字でなければなりません'
      tooLong: '"{key}" は {max} 文字を超えることはできません'
      startHyphen: '"{key}" は文字または数字で始まる必要があります'
      endHyphen: '"{key}" は文字または数字で終わる必要があります'
      emptyLabel: '"{key}" は2つの連続したドットを持つことはできません'
      tooLongLabel: '"{key}" は {max} 文字を超えるセクションを持つことはできません'
    label:
      startHyphen: '"{key}" は文字または数字で始まる必要があります'
      endHyphen: '"{key}" は文字または数字で終わる必要があります'
      emptyLabel: '"{key}" は空にできません'
      tooLongLabel: '"{key}" は {max} 文字を超えることはできません'
  k8s:
    identifier:
      startLetter: '"{key}" は文字または数字で始まる必要があります'
      endLetter: '"{key}" は文字または数字で終わる必要があります'
      emptyPrefix: '"{key}" は空の接頭辞を持つことはできません'
      tooLongPrefix: '"{key}" は {max} 文字を超える接頭辞を持つことはできません'
      emptyLabel: '"{key}" は空のキーを持つことはできません'
      tooLongKey: '"{key}" は {max} 文字を超えるキーを持つことはできません'
model:
  account:
    kind:
      registeredAgent: 登録済みエージェント
      agent: エージェント
      service: サービス
      user: ユーザー
      admin: 管理者
      project: 環境
  identity:
    displayType:
      user: ユーザー
      team: チーム
      group: グループ
      org: 組織
      localUser: ローカルユーザー
      unknown: "{type}?"
  machine:
    role:
      worker: ワーカー
      etcd: etcd
  openldapconfig:
    server:
      label: ホスト名または IP アドレス
    serviceAccountUsername:
      label: サービスアカウント ユーザー名
    serviceAccountPassword:
      label: サービスアカウント パスワード
    domain:
      label: ユーザー検索ベース
      placeholder: "例: ou=Users,dc=mycompany,dc=com"
      help: "ベース配下の以下のユーザーのみ検索に利用されます"
  projectMember:
    role:
      member: メンバー
      owner: オーナー
      readonly: Read-Only
      restricted: 制限済み
growl:
  webSocket:
    connecting:
      title: WebSocketへの接続中にエラーが発生しました
      warning: サーバーへのWebSocket接続を確立できません。サーバーがプロキシやSSL Terminationデバイスの背後にある場合、ブラウザはWebSocketに接続できません。サーバーがプロキシの背後にある場合は、プロキシがWebSocketをサポートしていることを確認してください。この問題が解決されるまで、ストリーミング東経、ログ、シェル/コンソール、リソースの状態の自動更新は動作しません。
      safariCertWarning: 考えられる別の原因は、たとえ警告をバイパスするために継続するよう回答したとしても、Safariが認識されない証明書を使用したWebSocket接続を許可しないことです。サーバーには、Safariが自動的に信頼する承認された機関によって署名された証明書が必要です。
      disconnectedWarning: "サーバーから切断されました。再接続を試みます..."
